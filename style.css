body {
	background-color: #ecf0f3;
	;
}

table {
	border-collapse: collapse;/*A szomszédos táblázatcellák határait egyetlen határba egyesíti. Ez egy tisztább és következetesebb megjelenést kölcsönöz a táblázatokhoz.*/
	position: absolute;	/*Az abszolút elhelyezés azt jelenti, hogy az elem az oldalon bárhol elhelyezhető, függetlenül attól, hogy hol helyezkedik el a dokumentumban.*/
	left: 47%;					/*Az elem a böngészőablak bal oldalától számított 47%-os távolságra lesz pozícionálva.*/
	margin-left: -155px;		/*Az elemet 155 képponttal jobbra tolja.*/
	top: 50px;					/*Az elem a böngészőablak felső szélétől számított 50 képponttal lejjebb lesz pozícionálva*/
	
	/*A CSS text-shadow: 0px 1px 2px #000; kód egy fekete árnyékot ad a szöveghez, amely 0 képponttal balra, 1 képponttal felfelé és 2 képponttal elmosódott. Ezt arra lehet használni, 
	hogy a szöveg kiemelkedőbbnek tűnjön, vagy hogy mélység érzetet adjon neki.*/
	text-shadow: 0px 1px 2px #000;	   
}


/*A megadott CSS kód egy táblázat első és utolsó soraiból és oszlopaiból eltávolítja a felső, alsó, bal és jobb határokat.*/
table tr:first-child td {
	border-top: 0;
}

table tr:last-child td {
	border-bottom: 0;
}

table tr td:first-child {
	border-left: 0;
}

table tr td:last-child {
	border-right: 0;
}


td {
	border: 2px solid #333;	/*2 pixeles, sötétszürke (#333) vastagságú folyamatos vonal*/
	height: 100px;	/*Az elem 100 képpont magas lesz.*/
	width: 100px;	/*Az elem szélességének 100 pixelre állítását eredményezi.*/
	text-align: center;	/*A szöveg középre igazítása.*/
	vertical-align: middle;	/*Egy elemet függőlegesen középre igazít a tartályában. Ez hasznos lehet szövegek és képek középre igazításához egy tartályban.*/
	font-family: "Comic Sans MS", cursive, sans-serif;
	font-size: 70px;	/*Betűméret 70px*/
	cursor: pointer;	/*Pontmutatót ad a szöveghez, ami jelzi a felhasználónak, hogy kattintható.*/

	/*Átmenetet alkalmaz a kiválasztott elem transform tulajdonságára. Az átmenet 0.3 másodpercig tart, és egy egyenletes időzítési függvényt használ.*/
	transition: transform 0.3s ease;
}

td:hover {
	background-color: #6ab8ec;	   /*Megváltozott háttérszín */
	transform: scale(0.5);			/*Kisebb méretűvé változik */
	border-radius: 30%;				/*Lekerekítés mértéke*/
}

.button-container {
	border-radius: 25px;	 /*25 pixel sugarú lekerekített sarkok*/
	background: #ecf0f3;	/*Világos kék-szürke háttérszín (#ecf0f3)*/
	margin-top: 3%;		     /*3%-os felső margó*/

	/*Dobozárnyék két belső árnyékkal, egy a finom kiemeléshez, a másik a finom árnyékhoz.
	Az első réteg egy 4 pixeles árnyék #d1d9e6 színnel, a második réteg pedig egy -4 pixeles árnyék #ffffff színnel. Mindkét árnyék eltolódása 0 pixel, 
	ami azt jelenti, hogy közvetlenül az elem határaihoz lesznek alkalmazva.
	A inset érték azt jelenti, hogy az árnyék az elem belsejéből jön. (ha töröljük az inset-et akkor nem bemélyedés lesz)*/
	box-shadow:
		4px 4px 4px 0px #d1d9e6 inset,		
		-4px -4px 4px 0px #ffffff inset;
	padding: 5px;	/*5 pixeles belső margók minden oldalon*/
	width: 260px;	/*260 pixeles szélesség*/

	/*Flexbox megjelenítés a tartalom vízszintes és függőleges középre igazításával*/
	display: flex;	
	justify-content: center;	
	align-items: center;
}

button {
	/*A var(--c: #fff;) változó egy var(--c) nevű változót definiál a fehér szín (#fff) értékével. Ezt a változót ezután más CSS tulajdonságokban is 
	lehet használni, például a color, a background-color és a border-color tulajdonságokban.*/
	--c: #fff;

	/* Lineáris gradiens háttér 
	A gradiens 90 fokos szögben alkalmazódik, és minden 300 képpontnál ismétlődik. A var(--_p, 100%) változó a gradiens helyzetét szabályozza, 
	és a #50caf0 szín az egyszínű háttérszín.
	linear-gradient() - Ez a függvény egy lineáris gradiens hátteret hoz létre. Az első paraméter a gradiens szöge, a második paraméter egy színmegállók 
	listája, a harmadik paraméter pedig a gradiens mérete.
	var(--_p, 100%) - Ez a változó a gradiens helyzetét szabályozza.
	no-repeat - Ez az érték megakadályozza, hogy a gradiens ismétlődjön.
	#50caf0 - Ez a szín az egyszínű háttérszín.*/
	background:
		linear-gradient(90deg, #0000 33%, #fff5, #0000 67%) var(--_p, 100%)/300% no-repeat,
		#50caf0;

	color: #0000; /*Ha nem tesszük be a feketét akkor lesz fekete.*/
	border: none;	/*Nincs keret*/

	/*Perspektívatranszformáció, amely 20 fokkal elforgatja a gombot a Y tengely körül. 
    A perspektívaátalakítás az elemet távolabbnak tűnteti a nézőtől, ezáltal mélység érzetét kelt. Az érték 500px a néző és a torlódáspont közötti 
	távolságot határozza meg, amely az a pont, ahol a párhuzamos vonalak összetűnnek.
    A Y tengely körüli forgatás az elemet a Y tengelyén forgatja el, amely a függőleges tengely. Az érték calc(20deg*var(--_i, -1)) a forgatás szögét 
	határozza meg, ahol a var(--_i) egy CSS változó.
	A var(--_i) változót az elem forgásának dinamikus vezérlésére lehet használni.*/
	transform: perspective(500px) rotateY(calc(20deg*var(--_i, -1)));	

	/* Szövegárnyék
	Az első eltolás 0,08 em-rel balra és -0,01 em-mel felfelé a szövegtől. Ugyanolyan színű, mint a szöveg, amelyet a var(--c) változó határoz meg.
	A második eltolás -0,08 em-rel jobbra és 0,01 em-mel lefelé a szövegtől. A színe #0004, amely egy nagyon sötét szürke.*/
	text-shadow:
		calc(var(--_i, -1)* 0.08em) -.01em 0 var(--c),
		calc(var(--_i, -1)*-0.08em) .01em 2px #0004;

	outline-offset: .1em; /*Kitöltésű körvonal*/
	transition: 0.4s;     /*Átmeneti idő. (billenés és fény csillanás)*/
	font-weight: bold;	  /*Vastaggá teszi a szöveget.*/
	font-size: 1.3rem;	  /*1,3 rem-re növeli a betűméretet. A rem egy relatív mérési egység, amely megegyezik a gyökérelem betűméretével.*/
	cursor: pointer;	  /*Pontmutatót ad a szöveghez, ami jelzi a felhasználónak, hogy kattintható.*/
	border-radius: 10px;  /*10 pixel lekerekített sarkok*/
}

/*A következő stílusokat fogja alkalmazni egy gombhoz, amikor az egeret fölé viszi:
    A var(--_p) változó 0%-ra lesz állítva, ami azt jelenti, hogy a lineáris gradiens háttér az elem elején kezdődik.
    A var(--_i) változó 1-re lesz állítva, ami azt jelenti, hogy a szöveg árnyéka látható lesz.*/
button:hover
/*,button:focus-visible*/ {
	--_p: 0%;
	--_i: 1;
}

button:active {
	text-shadow: none;	/*A szöveg árnyéka eltávolításra kerül.*/
	color: var(--c);	/*A szöveg színe a --c változó értékére lesz állítva.*/

	/*Egy belső árnyék kerül hozzáadásra a gombhoz, 0 pixeles belső eltolással és #0005 színnel. A 9e9q egy szám, amely egy érvényes CSS egység, 
	a q egy kvadratikus px egység. A q egység egy olyan egység, amely a pixelek négyzetének mértékét méri. Tehát a 9e9q érték azt jelenti, hogy 
	a blur sugara 9 * 9 = 81 pixel. A legtöbb modern böngésző támogatja, beleértve a Chrome-ot, a Firefoxot, a Safarit és az Edge-et. Ha a böngésző 
	nem támogatja a q egységet, akkor a 9e9q értéket 900px-re fogja konvertálni. Ez azt jelenti, hogy a blur sugara 900 pixel lesz.*/
	box-shadow: inset 0 0 9e9q #0005;	

	transition: 0s;		/*Az átmenet időtartama 0 másodpercre lesz állítva.*/
}

.gameresults {
	position: absolute;	/*Az abszolút elhelyezés azt jelenti, hogy az elem az oldalon bárhol elhelyezhető, függetlenül attól, hogy hol helyezkedik el a dokumentumban.*/
	
	/*60 pixelre a képernyő bal szélétõl és 35%-ra a képernyő tetejétõl. Ezenkívül 25 pixeles lekerekítést és #ecf0f3 háttérszínt alkalmaz.*/
	left: 60px;
	top: 35%;
	border-radius: 25px;
	background: #ecf0f3;

	/*Dobozárnyék két belső árnyékkal, egy a finom kiemeléshez, a másik a finom árnyékhoz.
	Az első réteg egy 4 pixeles árnyék #d1d9e6 színnel, a második réteg pedig egy -4 pixeles árnyék #ffffff színnel. Mindkét árnyék eltolódása 0 pixel, 
	ami azt jelenti, hogy közvetlenül az elem határaihoz lesznek alkalmazva.
	A inset érték azt jelenti, hogy az árnyék az elem belsejéből jön. (ha töröljük az inset-et akkor nem bemélyedés lesz)*/
	box-shadow:
		4px 4px 4px 0px #d1d9e6 inset,
		-4px -4px 4px 0px #ffffff inset;
	padding: 15px;	/*15 pixeles belső margók minden oldalon*/
}

.gameresults>h4 {
	text-align: center;	/*A szöveg középre igazítása.*/
	margin-bottom: 5px;	/*5 pixeles margó kerül alkalmazásra az elem alsó oldalára.*/
}

.players {
	display: inline-block;	/* Ez lehetővé teszi az elem számára, hogy egymás mellett helyezkedjen el más elemekkel az oldalon.*/
	margin-left: 15px;		/*15 pixeles margót alkalmaz az elem bal oldalára.*/
	margin-right: 18px;		/*15 pixeles margót alkalmaz az elem bal oldalára.*/
	margin-bottom: 10px;	/*10 pixeles margó kerül alkalmazásra az elem alsó oldalára.*/
}

.score_input {
	width: 35px;	/*az elem szélességének 35 pixelre állítását eredményezi*/
	text-align: center;	/*A szöveg középre igazítása.*/
}


.gamemodes {
	position: absolute;	/*Az abszolút elhelyezés azt jelenti, hogy az elem az oldalon bárhol elhelyezhető, függetlenül attól, 
	hogy hol helyezkedik el a dokumentumban.*/
	right: 15px; 			/* Jobb oldalon hagyj 15px helyet */
	top: 5%;	 			/*Ez az elemet az oldal tetejétől 5%-kal pozícionálja.*/
	border-radius: 25px;	/*Az elemhez 25 pixeles élhajlást alkalmaz. Ez a lekerekíti az elem sarkát.*/
	background: #ecf0f3;

	/*Dobozárnyék két belső árnyékkal, egy a finom kiemeléshez, a másik a finom árnyékhoz.
	Az első réteg egy 4 pixeles árnyék #d1d9e6 színnel, a második réteg pedig egy -4 pixeles árnyék #ffffff színnel. Mindkét árnyék eltolódása 0 pixel, 
	ami azt jelenti, hogy közvetlenül az elem határaihoz lesznek alkalmazva.
	A inset érték azt jelenti, hogy az árnyék az elem belsejéből jön. (ha töröljük az inset-et akkor nem bemélyedés lesz)*/
	box-shadow:
		4px 4px 4px 0px #d1d9e6 inset,
		-4px -4px 4px 0px #ffffff inset;
	padding: 15px;	/*15 pixeles belső margók minden oldalon*/

}

.gamemodes>h4 {
	text-align: center;	/*A szöveg középre igazítása.*/
}

/*.gamemodes > label {
	color: red;
}*/

.gametime {
	position: absolute; /*Az abszolút elhelyezés azt jelenti, hogy az elem az oldalon bárhol elhelyezhető, függetlenül attól, hogy hol helyezkedik el a dokumentumban.*/
	right: 85px;			/*Az elemet 85 pixelre pozícionálja az oldal jobb széletől*/
	top: 30%;				/*Ez az elemet az oldal tetejétől 307%-kal pozícionálja.*/
	border-radius: 25px;	/*Az elemhez 25 pixeles élhajlást alkalmaz. Ez a lekerekíti az elem sarkát.*/
	background: #ecf0f3;

	/*Dobozárnyék két belső árnyékkal, egy a finom kiemeléshez, a másik a finom árnyékhoz.
	Az első réteg egy 4 pixeles árnyék #d1d9e6 színnel, a második réteg pedig egy -4 pixeles árnyék #ffffff színnel. Mindkét árnyék eltolódása 0 pixel, 
	ami azt jelenti, hogy közvetlenül az elem határaihoz lesznek alkalmazva.
	A inset érték azt jelenti, hogy az árnyék az elem belsejéből jön. (ha töröljük az inset-et akkor nem bemélyedés lesz)*/
	box-shadow:
		4px 4px 4px 0px #d1d9e6 inset,
		-4px -4px 4px 0px #ffffff inset;
	padding: 15px;	/*15 pixeles belső margók minden oldalon*/
}

.gametime>h4 {
	text-align: center;	/*A szöveg középre igazítása.*/
}

/*.gametime > label {
	color: red;
}*/


.properties {
	text-align: center;	/*A szöveg középre igazítása.*/
	margin-top: 22%;	/*Az elem felső margóját 22%-kal növeli meg.*/
}

.properties>h4 {
	position: relative;
	font-size: 1em;			 /*Ez azt jelenti, hogy az elem mérete 1em lesz, ami megegyezik a szülőelem betűméretével.*/
	letter-spacing: 12px;	 /*Ez azt jelenti, hogy az elem minden betűje között 12 pixeles távolság lesz.*/
	font-family: sans-serif; /*Ez azt jelenti, hogy az elem egy sans-serif betűtípust fog használni, például Arial vagy Helvetica.*/
	display: table;			 /*Ez azt jelenti, hogy az elem táblázatos formában lesz megjelenítve.*/
	margin: auto;			 /*Ez azt jelenti, hogy az elem a képernyőn vízszintesen középre fog kerülni.*/
	cursor: pointer;		 /*Pontmutatót ad a szöveghez, ami jelzi a felhasználónak, hogy kattintható.*/
	transition: .5s;		 /*Az átmenet időtartama 0.5 másodpercre lesz állítva.*/
}

.properties>h4:before,
.properties>h4:after {
	content: attr(data-text);	/*Az elem tartalmát a data-text attribútum értékére állítja.*/
	transition: .6s;			/*Az átmenet időtartama 0.6 másodpercre lesz állítva.*/
}

.properties>h4:before {
	position: absolute;	/*Az abszolút elhelyezés azt jelenti, hogy az elem az oldalon bárhol elhelyezhető, függetlenül attól, hogy hol helyezkedik el a dokumentumban.*/
	z-index: -1;		/*Ez az elemet a weboldalon lévő összes többi elem mögé helyezi.*/
	
	/*A repeating-linear-gradient() függvény egy lineáris gradienst hoz létre, amely többször ismétlődik. Ebben az esetben a gradiens először átlátszó, 
	majd feketére megy át, majd vissza átlátszóra. A gradiens 6 képpontonként ismétlődik, ami villogó effektet hoz létre.
	A -webkit-mask: és mask: tulajdonságok a gradienst maszkként alkalmazzák az elemre. Ez azt jelenti, hogy csak az elem azon részei lesznek láthatók, 
	amelyeket a gradiens lefed. Az elem többi része el lesz rejtve.*/
	-webkit-mask: repeating-linear-gradient(45deg, transparent 0 3px, rgba(0, 0, 0, 0.5) 0 6px);
	mask: repeating-linear-gradient(45deg, transparent 0 3px, rgba(0, 0, 0, 0.5) 0 6px);
}

.properties>h4:hover {
	/*Az elemet 10 képponttal balra és 10 képponttal felfelé mozgatja. Ezt különböző effektusok létrehozására lehet használni, például egy elem 
	eltakarására vagy lebegő effektus létrehozására.*/
	transform: translate(-10px, -10px);
}

.properties>h4:hover:before {
	/*10 árnyékot ad hozzá a szöveghez, mindegyik árnyék 1 pixellel távolabb van a korábbinál. Ez egy többszörös árnyékeffektust hoz létre*/
	text-shadow:
		1px 1px,
		2px 2px,
		3px 3px,
		4px 4px,
		5px 5px,
		6px 6px,
		7px 7px,
		8px 8px,
		9px 9px,
		10px 10px;
}

.property-section {
	/*Arra kéri a böngészőt, hogy az elemet és annak gyermekeit a flexbox elrendezési modell segítségével jelenítse meg. Ez lehetővé teszi az elemek 
	elhelyezésének és igazításának rugalmasabb ellenőrzését*/
	display: flex;

	margin-top: 15px; /*15 képpontos felső margót ad az elemhez. Ez egy távolságot hoz létre az elem felső része és az azt megelőző elem között.*/
}

.prop_X,
.prop_O,
.prop_Δ {
	flex: 1; /*Az elérhető helyet egyenletesen osztja el a szekciók között */
}

.prop_X {
	border-radius: 15px;	/*Az elemhez 15 pixeles élhajlást alkalmaz. Ez a lekerekíti az elem sarkát.*/
	background: #ecf0f3;

	/*Dobozárnyék két belső árnyékkal, egy a finom kiemeléshez, a másik a finom árnyékhoz.
	Az első réteg egy 4 pixeles árnyék #d1d9e6 színnel, a második réteg pedig egy -4 pixeles árnyék #ffffff színnel. Mindkét árnyék eltolódása 0 pixel, 
	ami azt jelenti, hogy közvetlenül az elem határaihoz lesznek alkalmazva.
	A inset érték azt jelenti, hogy az árnyék az elem belsejéből jön. (ha töröljük az inset-et akkor nem bemélyedés lesz)*/
	box-shadow:
		4px 4px 4px 0px #d1d9e6 inset,
		-4px -4px 4px 0px #ffffff inset;
}

.prop_X>b,
p {
	display: inline-block;	/* Ez lehetővé teszi az elem számára, hogy egymás mellett helyezkedjen el más elemekkel az oldalon.*/
}

.prop_O {
	border-radius: 15px;	/*Az elemhez 15 pixeles élhajlást alkalmaz. Ez a lekerekíti az elem sarkát.*/
	background: #ecf0f3;

	/*Dobozárnyék két belső árnyékkal, egy a finom kiemeléshez, a másik a finom árnyékhoz.
	Az első réteg egy 4 pixeles árnyék #d1d9e6 színnel, a második réteg pedig egy -4 pixeles árnyék #ffffff színnel. Mindkét árnyék eltolódása 0 pixel, 
	ami azt jelenti, hogy közvetlenül az elem határaihoz lesznek alkalmazva.
	A inset érték azt jelenti, hogy az árnyék az elem belsejéből jön. (ha töröljük az inset-et akkor nem bemélyedés lesz)*/
	box-shadow:
		4px 4px 4px 0px #d1d9e6 inset,
		-4px -4px 4px 0px #ffffff inset;
}

.prop_O>b,
p {
	display: inline-block;	/*Ez lehetővé teszi az elem számára, hogy egymás mellett helyezkedjen el más elemekkel az oldalon.*/
}

.prop_Δ {
	border-radius: 15px;	/*Az elemhez 15 pixeles élhajlást alkalmaz. Ez a lekerekíti az elem sarkát.*/
	background: #ecf0f3;

	/*Dobozárnyék két belső árnyékkal, egy a finom kiemeléshez, a másik a finom árnyékhoz.
	Az első réteg egy 4 pixeles árnyék #d1d9e6 színnel, a második réteg pedig egy -4 pixeles árnyék #ffffff színnel. Mindkét árnyék eltolódása 0 pixel, 
	ami azt jelenti, hogy közvetlenül az elem határaihoz lesznek alkalmazva.
	A inset érték azt jelenti, hogy az árnyék az elem belsejéből jön. (ha töröljük az inset-et akkor nem bemélyedés lesz)*/
	box-shadow:
		4px 4px 4px 0px #d1d9e6 inset,
		-4px -4px 4px 0px #ffffff inset;
}

.prop_Δ>b,
p {
	display: inline-block;	/*Ez lehetővé teszi az elem számára, hogy egymás mellett helyezkedjen el más elemekkel az oldalon.*/
}



@media screen and (max-width: 768px) {

	td, td:hover {
		height: 50px;	
		width: 50px;	
		font-size: 40px;
	}

	table {
		left: 55%;
		top: 10%;
	}

	table tr:first-child td, table tr:last-child td  {
		height: 50px;	
		width: 50px;	
	}

	.gameresults {
		left: 2%;
		top: 25%;
	}

	.gamemodes {
		right: 2%;
		top: 3%;
	}

	.gametime {
		right: 2%;
		top: 25%;
	}
	  
	.properties {
		margin-top: 45%;
	}
}


@media only screen and (max-width: 912px) and (min-width: 820px) {

	td, td:hover {
		height: 70px;	
		width: 70px;	
		font-size: 45px;
	}

	table {
		left: 50%;
		top: 10%;
	}

	table tr:first-child td, table tr:last-child td  {
		height: 70px;	
		width: 70px;	
	}

	.gameresults {
		left: 2%;
		top: 25%;
	}

	.gamemodes {
		right: 2%;
		top: 3%;
	}

	.gametime {
		right: 2%;
		top: 25%;
	}
	  
	.properties {
		margin-top: 50%;
	}
}

@media only screen and (max-width: 1280px) and (min-width: 1024px) {

	td, td:hover {
		height: 80px;	
		width: 80px;	
		font-size: 55px;
	}

	table {
		left: 50%;
		top: 7%;
	}

	table tr:first-child td, table tr:last-child td  {
		height: 80px;	
		width: 80px;	
	}

	.gameresults {
		left: 2%;
		top: 25%;
	}

	.gamemodes {
		right: 2%;
		top: 3%;
	}

	.gametime {
		right: 2%;
		top: 25%;
	}
	  
	.properties {
		margin-top: 32%;
	}
}
